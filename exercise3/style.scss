@import 'colors';
@import 'navigation';

body{
    font-family: 'Helvetica', sans-serif;
    background-color: $page-bg;
}


.msg {
    border: 2px solid darken($color: $msg-bg, $amount: 10%);
    border-radius: 5px;
    background: $msg-bg;
    font-size: 1rem;
    color: $msg-txt;
    padding: 1rem 1.25rem;
    margin: 0.25em 0;
    display: inline-block;
    cursor: pointer;
    &:hover{
        background: lighten($color: $msg-bg, $amount: 10%);
        border: 2px solid darken($color: $msg-bg, $amount: 5%);
    }
}

.msg h1 {
    margin: 0 0 0.2em 0;
}

// .msg-info{
//     @extend .msg;

//     &:hover{
//         background: lighten($color: $info-color, $amount: 10%);
//     }

// }
// .msg-warning{
//     @extend .msg;

//     &:hover{
//         background: lighten($color: $warn-color, $amount: 10%);
//     }

// }
// .msg-danger{
//     @extend .msg;

//     &:hover{
//         background: darken($color: $danger-color, $amount: 10%);
//     }
// }

// all these classes are the same, with just one line different
// doing the same thing for info,warn,danger with only the word changing

//use a map and key/value stores, js equivilent is objects
$theme-colors: (
    info: $info-color,
    warning: $warn-color,
    danger: $danger-color,
    error: $error-color,
    success: $success-color
);

@each $name, $bg_color in $theme-colors{
    .msg-#{$name} {
        @extend .msg;
        background: #{$bg_color};
        border: 2px solid darken($color: $bg_color, $amount: 10%);
        &:hover{
            background: lighten($color: $bg_color, $amount: 10%);
            border: 2px solid darken($color: $bg_color, $amount: 5%);
        }
    }
}
